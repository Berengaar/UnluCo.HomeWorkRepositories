// <auto-generated />
using System;
using EmirhanAvci.WebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmirhanAvci.WebApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220204182643_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmirhanAvci.WebApi.Models.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EmirhanAvci.WebApi.Models.Concrete.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CoinCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CoinListDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CoinMaxSupply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CoinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CoinPriceAvg")
                        .HasColumnType("float");

                    b.Property<decimal>("CoinTotalSupply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NetworkId")
                        .HasColumnType("int");

                    b.Property<bool>("VisibilityStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("EmirhanAvci.WebApi.Models.Concrete.Network", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NetworkName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("EmirhanAvci.WebApi.Models.Concrete.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("NetworkId")
                        .HasColumnType("int");

                    b.Property<decimal>("TokenCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TokenListDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TokenMaxSupply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TokenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TokenPriceAvg")
                        .HasColumnType("float");

                    b.Property<decimal>("TokenTotalSupply")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VisibilityStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
